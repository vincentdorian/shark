{"version":3,"sources":["../src/lib/utils.ts","../src/index.ts"],"sourcesContent":["import {\r\n    cloneVNode,\r\n    computed,\r\n    isVNode,\r\n    reactive,\r\n    ref,\r\n    type AllowedComponentProps,\r\n    type ComponentCustomProps,\r\n    type Slots,\r\n    type VNode,\r\n    type VNodeProps,\r\n  } from 'vue'\r\n\r\nexport function useUniqueChild(slots: Slots, componentName: string) {\r\n    const validChildren = getValidChildren(slots)\r\n    if (validChildren.length > 1) {\r\n      const errorMessage = `[${componentName}] : ${componentName} can only have one root element.`\r\n      console.error(errorMessage)\r\n      throw new SyntaxError(errorMessage)\r\n    }\r\n    const DefaultSlot = cloneVNode(validChildren[0])\r\n  \r\n    return DefaultSlot\r\n  }\r\n\r\nexport function getValidChildren(slots: Slots | null): VNode[] {\r\n    const slotArray = slots?.default?.() || []\r\n    return slotArray.filter((child) => {\r\n      return isVNode(child)\r\n    })\r\n  }\r\n","import * as utils from './lib/utils';\r\n\r\nexport default {\r\n    utils\r\n};"],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACI;AAAA,EAEA;AAAA,OAQK;AAEF,SAAS,eAAe,OAAc,eAAuB;AAChE,QAAM,gBAAgB,iBAAiB,KAAK;AAC5C,MAAI,cAAc,SAAS,GAAG;AAC5B,UAAM,eAAe,IAAI,oBAAoB;AAC7C,YAAQ,MAAM,YAAY;AAC1B,UAAM,IAAI,YAAY,YAAY;AAAA,EACpC;AACA,QAAM,cAAc,WAAW,cAAc,CAAC,CAAC;AAE/C,SAAO;AACT;AAEK,SAAS,iBAAiB,OAA8B;AAC3D,QAAM,YAAY,OAAO,UAAU,KAAK,CAAC;AACzC,SAAO,UAAU,OAAO,CAAC,UAAU;AACjC,WAAO,QAAQ,KAAK;AAAA,EACtB,CAAC;AACH;;;AC5BF,IAAO,cAAQ;AAAA,EACX;AACJ;","names":[]}